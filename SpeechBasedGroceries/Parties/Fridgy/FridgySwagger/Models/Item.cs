// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SpeechBasedGroceries.Parties.Fridgy.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Item : BaseItem
    {
        /// <summary>
        /// Initializes a new instance of the Item class.
        /// </summary>
        public Item()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Item class.
        /// </summary>
        public Item(string barcode, double qty, System.DateTime? expiry = default(System.DateTime?), System.Guid? fridge = default(System.Guid?), System.DateTime? created = default(System.DateTime?), double? initQty = default(double?), System.Guid? id = default(System.Guid?))
            : base(barcode, qty, expiry)
        {
            Fridge = fridge;
            Created = created;
            InitQty = initQty;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fridge")]
        public System.Guid? Fridge { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "created")]
        public System.DateTime? Created { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "initQty")]
        public double? InitQty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
