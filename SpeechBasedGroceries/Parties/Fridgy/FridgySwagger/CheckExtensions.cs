// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SpeechBasedGroceries.Parties.Fridgy.Client
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Check.
    /// </summary>
    public static partial class CheckExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='username'>
            /// Filters a for a username
            /// </param>
            /// <param name='email'>
            /// Filters a for an email
            /// </param>
            public static void UserMethod(this ICheck operations, string username = default(string), string email = default(string))
            {
                operations.UserMethodAsync(username, email).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='username'>
            /// Filters a for a username
            /// </param>
            /// <param name='email'>
            /// Filters a for an email
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UserMethodAsync(this ICheck operations, string username = default(string), string email = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UserMethodWithHttpMessagesAsync(username, email, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
